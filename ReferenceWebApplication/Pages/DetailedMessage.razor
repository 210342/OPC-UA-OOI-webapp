@page "/detailed-message"
@using System.IO
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Logging
@using M2MCommunication.Core
@using M2MCommunication.Services
@using MessageParsing

<div class="container-fluid">
    <h1 class="text-danger">@ExceptionMessage</h1>
    @if (!IsLayoutHorizontal)
    {
        <div class="row my-1">
            <div class="col-6 text-center py-2">
                <h3><span class="badge badge-primary">Packages received: @PackagesReceived</span></h3>
            </div>
            <div class="col-6 text-center py-2">
                <h3><span class="badge @bytesReceivedStyle">Bytes received: @BytesReceived</span></h3>
            </div>
        </div>
    }
    <div class="row my-3 no-gutters">
        <div class="@imageColumnClass">
            <ReferenceWebApplication.Components.ImageMessageParser Parser="Parser" />
        </div>
        @if (IsLayoutHorizontal)
        {
            <div class="col-3">
                <div class="row my-2">
                    <div class="col-12">
                        <div class="text-center">
                            <h3><span class="badge badge-primary">Packages received: @PackagesReceived</span></h3>
                        </div>
                    </div>
                </div>
                <div class="row my-2">
                    <div class="col-12">
                        <div class="text-center">
                            <h3><span class="badge @bytesReceivedStyle">Bytes received: @BytesReceived</span></h3>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row my-3">
        <div class="col-12">
            <h2 class="mt-6 mb-3">Other properties</h2>
            <ReferenceWebApplication.Components.TextMessageParser Parser="Parser" />
        </div>
    </div>
</div>

@inject MessageBusService BusService
@inject UaLibrarySettings settings
@inject IMessageParser Parser
@inject ILogger<DetailedMessage> Logger
@inject IStringLocalizer<DetailedMessage> Localizer
@code
{
    private IMessageBus Bus => BusService?.MessageBus;
    private string bytesReceivedStyle => BytesReceived > 2048 ? "badge-warning" : "badge-info";
    private string imageColumnClass => IsLayoutHorizontal ? "col-9" : "col-12";

    public int BytesReceived { get; private set; } = 0;
    public int PackagesReceived { get; private set; } = 0;
    public bool IsLayoutHorizontal { get; set; } = false;
    public string ExceptionMessage { get; private set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            Bus?.Initialise(settings, ExceptionHandler);
            Parser?.Initialise();
        });
    }

    protected void ExceptionHandler(Exception ex)
    {
        Logger.LogError(ex, ex.Message);
        if (ex is FileNotFoundException)
        {
            ExceptionMessage = Localizer.GetString("ConfigurationFileNotFound") ?? "Couldn't find the consumer data configuration file";
        }
        else if (ex is ArgumentOutOfRangeException)
        {
            ExceptionMessage = Localizer.GetString("UnsupportedDataType") ?? "Received data type is not supported";
        }
        else
        {
            ExceptionMessage = ex.Message;
        }
    }
}