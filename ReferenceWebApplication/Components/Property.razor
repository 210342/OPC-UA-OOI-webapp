@using System.Text
@using TemplateRepositories.Model
@using M2MCommunication.Core.Interfaces

<span class="drawable-property font-bordered" style="@Style">
    @PrintedString
</span>

@inject ILogger Logger
@code
{
    [Parameter]
    public DrawableProperty DrawableProperty { get; set; }
    private string Style => DrawableProperty is null
        ? string.Empty
        : new StringBuilder()
            .Append("position: absolute;")
            .Append("left: ").Append(DrawableProperty.Template.Location?.X).Append("px;")
            .Append("top: ").Append(DrawableProperty.Template.Location?.Y).Append("px;")
            .Append("color: ").Append(DrawableProperty.Template?.HexColor ?? "black").Append(";")
            .ToString();
    private string PropertyString => DrawableProperty.Subscription.Value?.ToString();
    private string PrintedString
    {
        get
        {
            try
            {
                return PropertyString.Equals(string.Empty)
                    ? string.Empty
                    : PropertyString.Substring(0, Math.Min(PropertyString.Length, PropertyString.Contains("-") ? 6 : 5));
            }
            catch (ArgumentOutOfRangeException ex)
            {
                Logger?.LogError(ex, $"{ex.Message} - {PropertyString}");
                return PropertyString;
            }
        }
    }
}
